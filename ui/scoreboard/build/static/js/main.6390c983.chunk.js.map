{"version":3,"sources":["components/scoreboard/timer.js","components/scoreboard/score.js","components/scoreboard/weather.js","components/scoreboard/clock.js","components/scoreboard/feed.js","components/scoreboard/scoreboard.js","components/scoreboard/index.js","components/controller/controller.styled.js","components/controller/index.js","App.js","serviceWorker.js","index.js"],"names":["ClockContainer","styled","div","PauseCounter","props","seconds","Timer","completion","onComplete","interval","clearInterval","url","autoLoad","volume","playFromPosition","playStatus","Sound","status","PLAYING","onFinishedPlaying","pad","n","width","length","Array","join","startupRenderer","completed","Fragment","renderer","minutes","milliseconds","start","paused","now","Date","getTime","undefined","Math","round","date","intervalDelay","precision","this","setInterval","setState","end","timeLeft","floor","toFixed","parseInt","renderTimer","React","Component","ScoreConatiner","Team","Score","ScoreBlock","name","score","Weather","render","style","display","ref","el","instance","className","href","data-label_1","data-label_2","data-days","data-theme","s","document","createElement","type","async","innerHTML","appendChild","Clock","state","color","font","fontSize","fontWeight","textAlign","paddingTop","tz","format","moment","htmlparser2","require","Feed","thumb","img","node","thumbnail_resources","src","parseResult","data","parsed","parser","Parser","onopentag","attribs","ontext","text","search","startsWith","jsonText","substr","JSON","parse","onclosetag","tagname","decodeEntities","write","entry_data","topImagesRaw","TagPage","graphql","hashtag","edge_hashtag_to_top_posts","edges","allRaw","edge_hashtag_to_media","slice","images","map","concat","shuffleArray","setTimeout","_loadData","feedName","fetch","method","then","result","html","catch","err","console","log","fadeProperties","defaultIndex","random","height","minHeight","imgInfo","index","key","alt","paddingBottom","duration","transitionDuration","infinite","indicators","arrows","array","i","j","setConfiguration","gutterWidth","gridColumns","breakpoints","containerWidths","Scoreboard","currentGame","home","homeScore","away","awayScore","padding","overflow","md","flexFlow","backgroundColor","flex","border","alignContent","maxHeight","GameLength","input","TeamQuickSelect","select","SelectedTeam","baseButtonStyles","css","SubmitButton","button","Controller","sendMessage","historyTeams","setDuration","teamNames","setTeamNames","addScore","team","action","marginLeft","placeholder","value","onChange","e","target","teams","onClick","split","gameInfo","Nes","StyledDiv","App","handleData","prev","msg","refWebSocket","request","path","payload","stringify","headers","Accept","res","json","from","reduce","list","game","add","Set","Client","connect","onUpdate","getHistory","exact","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6390c983.chunk.js","sourcesContent":["import React from \"react\";\nimport Countdown from \"react-countdown-now\";\nimport Sound from \"react-sound\";\nimport styled from \"styled-components\";\n\nconst ClockContainer = styled.div`\n  text-align: center;\n  width: 100%;\n  color: white;\n  font-size: 150px;\n  font-family: \"Arial Narrow\";\n  padding-top: 40px;\n`;\n\nconst PauseCounter = styled.div`\n  color: red;\n  font-size: 100px;\n  text-align: right;\n  padding-right: 30px;\n  position: absolute;\n  bottom: 2px;\n  right: 2px;\n  animation-duration: 1.1s;\n  animation-name: countdown${props => props.seconds};\n  animation-timing-function: ease-in;\n  \n  @keyframes countdown${props => props.seconds} {\n    from {\n      transform: scale(0.5);\n      transform-origin: 100% 100%;\n    }\n    to {\n      transform: scale(2.5);\n      transform-origin: 100% 100%;\n    }\n  }\n`;\n\nclass Timer extends React.Component {\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({});\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  completion = () => {\n    const { onComplete } = this.props;\n\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n\n    return (\n      <Sound\n        url=\"air-horn.wav\"\n        autoLoad={true}\n        volume={100}\n        playFromPosition={0}\n        playStatus={Sound.status.PLAYING}\n        onFinishedPlaying={onComplete}\n      />\n    );\n  };\n\n  pad = (n, width) => {\n    const z = \"0\";\n    n = n + \"\";\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n  };\n\n  startupRenderer = ({ seconds, completed }) => {\n    if (completed) {\n      return <React.Fragment />;\n    } else {\n      return <PauseCounter seconds={seconds}>{seconds + 1}</PauseCounter>;\n    }\n  };\n\n  renderer = ({ minutes, seconds, completed, milliseconds }) => {\n    const { start, paused } = this.props;\n    const now = new Date().getTime();\n\n    if (completed) {\n      // Render a completed state\n      return this.completion();\n    } else {\n      // Render a countdown\n      return (\n        <React.Fragment>\n          {minutes === 0 ? (\n            <span>\n              {this.pad(seconds, 2)}\n              {milliseconds !== undefined && (\n                <React.Fragment>\n                  .{Math.round(milliseconds + 1 / 100)}\n                </React.Fragment>\n              )}\n            </span>\n          ) : (\n            <span>\n              {this.pad(minutes, 2)}:{this.pad(seconds, 2)}\n            </span>\n          )}\n          {start > now && !paused && (\n            <Countdown\n              date={start}\n              renderer={this.startupRenderer}\n              intervalDelay={0}\n              precision={3}\n            />\n          )}\n        </React.Fragment>\n      );\n    }\n  };\n\n  renderTimer() {\n    const { end, start, paused, timeLeft } = this.props;\n    const minutes = Math.floor(timeLeft / 60000);\n    const seconds = ((timeLeft % 60000) / 1000).toFixed(0);\n    const milliseconds = parseInt(timeLeft % 1000);\n    const now = new Date().getTime();\n\n    return paused || now < start ? (\n      this.renderer({ minutes, seconds, milliseconds })\n    ) : now < end + 1000 ? (\n      <Countdown\n        date={end}\n        renderer={this.renderer}\n        intervalDelay={0}\n        precision={3}\n      />\n    ) : (\n      <div />\n    );\n  }\n\n  render() {\n    return <ClockContainer>{this.renderTimer()}</ClockContainer>;\n  }\n}\n\nexport default Timer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ScoreConatiner = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: \"center\";\n  padding-top: 10px;\n  padding-bottom: 15px;\n  display: flex;\n  flex-flow: column;\n  min-height: 310px;\n`;\n\nconst Team = styled.div`\n  text-align: center;\n  width: 100%;\n  color: white;\n  font-size: 50px;\n  font-family: \"Tahoma\";\n  flex: 1 1 auto;\n  padding-top: 10px;\n`;\nconst Score = styled.div`\n  text-align: center;\n  width: 100%;\n  color: white;\n  font-weight: bold;\n  font-size: 100px;\n  font-family: \"Tahoma\";\n  flex: 0 1 5px;\n  padding-bottom: 25px;\n`;\n\nconst ScoreBlock = ({ name, score }) => {\n  return (\n    <ScoreConatiner>\n      <Team>{name}</Team>\n      <Score>{score}</Score>\n    </ScoreConatiner>\n  );\n};\n\nexport default ScoreBlock;\n","import React from \"react\";\n\nclass Weather extends React.Component {\n  componentDidMount() {\n    const s = document.createElement(\"script\");\n    s.type = \"text/javascript\";\n    s.async = true;\n    s.innerHTML =\n      \"!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src='https://weatherwidget.io/js/widget.min.js';fjs.parentNode.insertBefore(js,fjs);}}(document,'script','weatherwidget-io-js');\";\n    this.instance.appendChild(s);\n  }\n\n  render = () => {\n    return (\n      <div\n        style={{ width: \"100%\", display: \"inline-block\" }}\n        ref={el => (this.instance = el)}\n      >\n        <a\n          className=\"weatherwidget-io\"\n          href=\"https://forecast7.com/en/33d88n111d93/85331/?unit=us\"\n          data-label_1=\"Ellis Center\"\n          data-label_2=\"Weather\"\n          data-days=\"3\"\n          data-theme=\"original\"\n        >\n          Cave Creek Weather\n        </a>\n      </div>\n    );\n  };\n}\n\nexport default Weather;\n","import React from \"react\";\nimport moment from \"moment-timezone\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { now: moment() };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({ now: moment() });\n    }, 10000);\n  }\n\n  componentWillUnmount() {\n    this.interval && clearInterval(this.interval);\n  }\n\n  render = () => {\n    const { now } = this.state;\n    return (\n      <div\n        style={{\n          color: \"white\",\n          font: \"Tahoma\",\n          fontSize: 25,\n          fontWeight: \"bold\",\n          textAlign: \"center\",\n          width: \"100%\",\n          paddingTop: \"35px\"\n        }}\n      >\n        {now.tz(\"America/Phoenix\").format(\"h:mm a\")}\n      </div>\n    );\n  };\n}\n\nexport default Clock;\n","import React from \"react\";\nimport { Fade } from \"react-slideshow-image\";\nconst htmlparser2 = require(\"htmlparser2\");\n\nclass Feed extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { images: [], feedName: \"ellisFamilyHoops\" };\n    this.fadeProperties = {\n      duration: 5000,\n      transitionDuration: 500,\n      infinite: true,\n      indicators: false,\n      arrows: false\n    };\n  }\n\n  thumb = img => {\n    return { url: img.node.thumbnail_resources[2].src };\n  };\n\n  shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  parseResult = data => {\n    let parsed = {};\n    const parser = new htmlparser2.Parser(\n      {\n        onopentag(name, attribs) {},\n        ontext(text) {\n          const search = \"window._sharedData = \";\n          if (text.startsWith(search)) {\n            const jsonText = text.substr(\n              search.length,\n              text.length - search.length - 1\n            );\n            parsed = JSON.parse(jsonText);\n          }\n        },\n        onclosetag(tagname) {}\n      },\n      { decodeEntities: true }\n    );\n\n    parser.write(data);\n    parser.end();\n\n    if (parsed.entry_data) {\n      const topImagesRaw =\n        parsed.entry_data.TagPage[0].graphql.hashtag.edge_hashtag_to_top_posts\n          .edges;\n      const allRaw = parsed.entry_data.TagPage[0].graphql.hashtag.edge_hashtag_to_media.edges.slice(\n        0,\n        10\n      );\n\n      const images = topImagesRaw\n        .map(this.thumb)\n        .concat(allRaw.map(this.thumb));\n\n      this.shuffleArray(images);\n\n      this.setState({ images });\n    } else {\n      setTimeout(\n        (() => {\n          this._loadData();\n        },\n        1000)\n      );\n    }\n  };\n\n  _loadData = () => {\n    const { feedName } = this.state;\n    fetch(`https://www.instagram.com/explore/tags/${feedName}/`, {\n      method: \"GET\"\n    })\n      .then(result => result.text())\n      .then(html => this.parseResult(html))\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this._loadData();\n  }\n\n  render = () => {\n    const { images, feedName } = this.state;\n    this.fadeProperties.defaultIndex = Math.floor(\n      Math.random() * images.length\n    );\n\n    console.log(this.fadeProperties.defaultIndex);\n    return (\n      <Fade\n        style={{ width: \"100%\", height: \"100%\", minHeight: 455 }}\n        {...this.fadeProperties}\n      >\n        {this.state.images.map((imgInfo, index) => (\n          <div key={index}>\n            <img\n              key={index}\n              style={{ width: \"100%\" }}\n              alt={imgInfo.alt}\n              src={imgInfo.url}\n            />\n            <div\n              style={{\n                width: \"100%\",\n                color: \"white\",\n                font: \"Tahoma\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                textAlign: \"center\",\n                paddingTop: 20,\n                paddingBottom: 10\n              }}\n            >\n              #{feedName}\n            </div>\n          </div>\n        ))}\n      </Fade>\n    );\n  };\n}\n\nexport default Feed;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-grid-system\";\n\nimport Timer from \"./timer\";\nimport ScoreBlock from \"./score\";\nimport Weather from \"./weather\";\nimport Clock from \"./clock\";\nimport Feed from \"./feed\";\n\nimport { setConfiguration } from \"react-grid-system\";\n\nsetConfiguration({\n  gutterWidth: 0,\n  gridColumns: 20,\n  breakpoints: [576, 720, 1280, 1200],\n  containerWidths: [540, 710, 1280, 1280]\n});\n\nconst Scoreboard = ({ currentGame, onComplete }) => {\n  const { home, homeScore, away, awayScore } = currentGame;\n  return (\n    <Container\n      style={{ padding: \"5px\", paddingBottom: \"0px\", overflow: \"hidden\" }}\n    >\n      <Row>\n        <Col\n          md={11}\n          style={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            height: \"750\",\n            backgroundColor: \"white\"\n          }}\n        >\n          <Row style={{ flex: \"1 1 auto\" }}>\n            <Col\n              style={{ backgroundColor: \"#1f567c\", border: \"white solid 5px\" }}\n            >\n              <Timer {...currentGame} onComplete={onComplete} />\n            </Col>\n          </Row>\n          <Row>\n            <Col\n              md={5}\n              style={{\n                border: \"white solid 5px\",\n                padding: 5,\n                backgroundColor: \"#1f567c\",\n                alignContent: \"center\"\n              }}\n            >\n              <Row>\n                <Clock />\n              </Row>\n            </Col>\n            <Col\n              md={15}\n              style={{\n                border: \"white solid 5px\",\n                padding: 5,\n                backgroundColor: \"#1f567c\",\n                alignContent: \"center\"\n              }}\n            >\n              <Weather />\n            </Col>\n          </Row>\n          <Row style={{ flex: \"0 1 auto\", backgroundColor: \"#1f567c\" }}>\n            <Col style={{ border: \"white solid 5px\" }}>\n              <ScoreBlock name={home} score={homeScore} />\n            </Col>\n            <Col style={{ border: \"white solid 5px\" }}>\n              <ScoreBlock name={away} score={awayScore} />\n            </Col>\n          </Row>\n        </Col>\n        <Col\n          md={9}\n          style={{\n            height: 710,\n            maxHeight: 710,\n            backgroundColor: \"#1f567c\",\n            border: \"white solid 5px\"\n          }}\n        >\n          <Row>\n            <Feed />\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Scoreboard;\n","import Scoreboard from \"./scoreboard\";\nexport default Scoreboard;\n","import styled, { css } from \"styled-components\";\n\nexport const GameLength = styled.input`\n  height: 50px;\n  border-radius: 10px;\n  box-shadow: 0 5px 10px -10px rgba(0, 0, 0, 0.2);\n  background-color: #ffffff;\n  padding: 0px 15px 0px 15px;\n  font-size: 18px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #4a4a4a;\n  outline: none;\n  margin: 20px;\n\n  ::placeholder {\n    opacity: 0.5;\n\n    font-size: 22px;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: normal;\n    color: #4a4a4a;\n  }\n  ::-webkit-inner-spin-button {\n    opacity: 1;\n    transform: scale(2.2);\n  }\n`;\n\nexport const TeamQuickSelect = styled.select`\n  height: 50px;\n  border-radius: 10px;\n  background-color: #ffffff;\n  padding: 0px 15px 0px 15px;\n  margin: 20px;\n  font-size: 18px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #4a4a4a;\n  outline: none;\n`;\n\nexport const SelectedTeam = styled.input`\n  width: 90%;\n  height: 50px;\n  border-radius: 10px;\n  box-shadow: 0 5px 10px -10px rgba(0, 0, 0, 0.2);\n  background-color: #ffffff;\n  padding: 0px 15px 0px 15px;\n  font-size: 18px;\n  font-weight: normal;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: #4a4a4a;\n  outline: none;\n  margin: 20px;\n\n  ::placeholder {\n    opacity: 0.5;\n\n    font-size: 22px;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: normal;\n    color: #4a4a4a;\n  }\n`;\n\nconst baseButtonStyles = css`\n  display: block;\n  outline: none;\n  padding: 14px 15%;\n  width: 100%;\n  max-width: 452px;\n  font-family: Roboto;\n  font-size: 14px;\n  font-weight: 500;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.14;\n  letter-spacing: 1.25px;\n  text-align: center;\n  color: #ffffff;\n  text-transform: uppercase;\n  border: none;\n  -webkit-backdrop-filter: blur(40px);\n  backdrop-filter: blur(40px);\n  border-radius: 6px;\n  background-color: #1f567c;\n  cursor: pointer;\n`;\n\nexport const SubmitButton = styled.button`\n  ${baseButtonStyles}\n`;\n","import * as React from \"react\";\nimport { Container, Row, Col } from \"react-grid-system\";\n\nimport Timer from \"../scoreboard/timer\";\nimport ScoreBlock from \"../scoreboard/score\";\n\nimport { setConfiguration } from \"react-grid-system\";\nimport {\n  GameLength,\n  TeamQuickSelect,\n  SelectedTeam,\n  SubmitButton\n} from \"./controller.styled\";\n\nsetConfiguration({\n  gutterWidth: 1,\n  gridColumns: 20,\n  breakpoints: [576, 720, 992, 1200],\n  containerWidths: [540, 710, 1280, 1280]\n});\n\nconst Controller = ({ currentGame, sendMessage, onComplete, historyTeams }) => {\n  const { home, homeScore, away, awayScore } = currentGame;\n\n  const [duration, setDuration] = React.useState(20);\n  const [teamNames, setTeamNames] = React.useState(historyTeams[0]);\n\n  const newGameClick = () => {\n    console.log(\"new game\");\n    const [away, home] = teamNames.split(\"@\");\n\n    sendMessage({ action: \"newGame\", gameInfo: { home, away, duration } });\n  };\n\n  const onTimerClick = () => {\n    // const paused = currentGame && currentGame.paused;\n    // const finished = true;\n    // // !paused && currentGame && currentGame.end && now > currentGame.end;\n    // if (finished) {\n    //   sendMessage({\n    //     action: \"newGame\",\n    //     gameInfo: {\n    //       home: \"lazy llamas\",\n    //       away: \"penguin polar pops\",\n    //       duration: 15\n    //     }\n    //   });\n    // } else {\n    //   sendMessage({\n    //     action: paused ? \"unpause\" : \"pause\"\n    //   });\n    // }\n  };\n\n  const addScore = team => {\n    sendMessage({\n      action: `${team}Score`\n    });\n  };\n\n  return (\n    <Container\n      style={{\n        padding: 0,\n        paddingTop: 5,\n        marginLeft: 5,\n        maxHeight: 1280,\n        overflow: \"hidden\"\n      }}\n    >\n      <Row>\n        <Col>\n          <SelectedTeam\n            placeholder=\"Team Names (with @)\"\n            value={teamNames}\n            onChange={e => setTeamNames(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <GameLength\n            type=\"number\"\n            placeholder=\"Game Length\"\n            value={duration}\n            onChange={e => setDuration(parseInt(e.target.value))}\n          />\n        </Col>\n        <Col>\n          <TeamQuickSelect onChange={e => setTeamNames(e.target.value)}>\n            {historyTeams.map(teams => (\n              <option key={teams} value={teams}>\n                {teams}\n              </option>\n            ))}\n          </TeamQuickSelect>\n        </Col>\n      </Row>\n      <Row>\n        <SubmitButton onClick={newGameClick}>New Game</SubmitButton>\n      </Row>\n      <Row style={{ backgroundColor: \"#1f567c\" }} onClick={onTimerClick}>\n        <Col style={{ border: \"white solid 5px\" }}>\n          <Timer {...currentGame} onComplete={onComplete} />\n        </Col>\n      </Row>\n      <Row style={{ backgroundColor: \"#1f567c\" }}>\n        <Col\n          style={{ border: \"white solid 5px\" }}\n          onClick={() => addScore(\"away\")}\n        >\n          <ScoreBlock name={away} score={awayScore} />\n        </Col>\n        <Col\n          style={{ border: \"white solid 5px\" }}\n          onClick={() => addScore(\"home\")}\n        >\n          <ScoreBlock name={home} score={homeScore} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Controller;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Scoreboard from \"./components/scoreboard/\";\nimport Controller from \"./components/controller/\";\nconst Nes = require(\"@hapi/nes/lib/client\");\n\nconst StyledDiv = styled.div``;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentGame: {},\n      historyTeams: [\n        \"dad@reef\",\n        \"reef@dad\",\n        \"penguin polar pops@lazy llamas\",\n        \"lazy llamas@penguin polar pops\",\n        \"something else\"\n      ]\n    };\n  }\n\n  handleData = data => {\n    console.log(data);\n\n    const { currentGame } = data;\n\n    if (currentGame) {\n      this.setState(prev => {\n        return { currentGame };\n      });\n    }\n  };\n\n  sendMessage = msg => {\n    this.refWebSocket.request({\n      method: \"POST\",\n      path: \"update\",\n      payload: JSON.stringify(msg)\n    });\n  };\n\n  getHistory() {\n    fetch(\"http://ellis-scoreboard.local:3000/history\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => {\n        console.log(\"here\");\n        return res.json();\n      })\n      .then(res => {\n        const historyTeams = Array.from(\n          res.reduce((list, game) => {\n            return list\n              .add(`${game.home}@${game.away}`)\n              .add(`${game.away}@${game.home}`);\n          }, new Set())\n        );\n        console.log(historyTeams);\n        this.setState(prev => {\n          return { historyTeams };\n        });\n      })\n      .catch(err => {\n        debugger;\n        console.log(err);\n      });\n  }\n\n  componentDidMount() {\n    console.log(\"here again\");\n    this.refWebSocket = new Nes.Client(\"ws://ellis-scoreboard.local:3000\");\n    this.refWebSocket.connect().then(() => {\n      this.refWebSocket.onUpdate = this.handleData;\n      this.sendMessage({ action: \"currentGame\" });\n      this.getHistory();\n    });\n  }\n\n  onComplete = () => {\n    //this.sendMessage({ action: \"currentGame\" });\n  };\n\n  render() {\n    const { currentGame, historyTeams } = this.state;\n\n    return (\n      <Router className=\"App\">\n        <StyledDiv>\n          {currentGame && (\n            <React.Fragment>\n              <Route\n                exact\n                path=\"/scoreboard\"\n                render={props => (\n                  <Scoreboard\n                    {...props}\n                    currentGame={currentGame}\n                    onComplete={this.onComplete}\n                  />\n                )}\n              />\n              <Route\n                exact\n                path=\"/controller\"\n                render={props => (\n                  <Controller\n                    {...props}\n                    currentGame={currentGame}\n                    sendMessage={this.sendMessage}\n                    onComplete={this.onComplete}\n                    historyTeams={historyTeams}\n                  />\n                )}\n              />\n            </React.Fragment>\n          )}\n        </StyledDiv>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconsole.log(\"here\");\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}